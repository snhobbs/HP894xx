echo on
clc
%	This demonstration will show you how to compare the FRF
%	measurement results of the digitally filtered HP3566/67A 
%	time capture data and the orginal filter shapes
%	generated by the PC-MATLAB Signal Processing Toolbox.
%	
%	This demonstration assumes that a 4 channel FRF data
%	file with a span of 12800 Hz span has been processed from
%	the 'matdemo.tim' time capture file and has been saved 
%	as 'matfrf' in the \analyzer\data directory. 
%       It is also assumed that 'sdftoml.exe' is in the 
%       \analyzer\util directory.
%
%	If you don't have an appropriate data file, 
%	hit CTRL-C, else hit any other key to continue...
pause 
clc
%	First, we'll convert our saved SDF data file 'matfrf.dat'
%	into MATLAB format.

!\analyzer\util\sdftoml -a -x \analyzer\data\matfrf.dat

pause % Strike any key to continue.
clc
%	Now we'll load the 'freqresp.mat' file.

load	freqresp

pause % Strike any key to continue.
clc
%	Lets re-create a second order Butterworth high pass 
%	filter with a cutoff frequency of 2048 Hz.
w1 = [.125];
[b,a] = butter(2,w1,'high');
%
%	Now that the coefficents are calculated, lets compare 
%	the measured and calculated transfer function magnitude.
%
pause % Strike any key for plot.
clc
[h,w] = freqz(b,a,128);
f = w*16384/pi;
loglog(f,abs(h),'b',o3i1x,abs(o3i1),'g'),..
title('second order Butterworth high pass'),..
xlabel('Frequency(Hz)'),ylabel('Magnitude'),grid,pause
clc
%	Lets now compare the measured and calculated transfer 
%	function phase.
%
pause % Strike any key for plot.
semilogx(f,unwrap(h),'g',o3i1x,unwrap(o3i1),'b'),..
title('second order Butterworth high pass'),..
xlabel('Frequency(Hz)'),ylabel('Phase'),grid,pause
clc
%	Lets re-create a fourth order Chebyshev bandpass filter
%	with 0.5 dB of ripple from 4096 Hz to 8192 Hz.
w1 = [.25,.50];
[b,a] = cheby1(4,0.5,w1);
%
%	Now that the coefficents are calculated, lets compare 
%	the measured and calculated transfer function magnitude.
%
pause % Strike any key for plot.
clc
[h,w] = freqz(b,a,128);
f = w*16384/pi;
loglog(f,abs(h),'b',o4i1x,abs(o4i1),'g'),..
title('fourth order Chebyshev bandpass'),..
xlabel('Frequency(Hz)'),ylabel('Magnitude'),grid,pause
clc
%	Lets now compare the measured and calculated transfer 
%	function phase.
%
pause % Strike any key for plot.
clc
semilogx(f,unwrap(h),'g',o4i1x,unwrap(o4i1),'b'),..
title('fourth order Chebyshev bandpass'),..
xlabel('Frequency(Hz)'),ylabel('Phase'),grid,pause
clc
% 	This ends the digital filtering comparision demo. 
%
pause % Hit any key to continue.
clc
