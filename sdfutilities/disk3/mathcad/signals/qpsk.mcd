.MCAD 302010000 1 74
.CMD PLOTFORMAT
0 0 1 0 0
0 0 1 0 0
0 1 0 0 NO-TRACE-STRING
0 2 1 0 NO-TRACE-STRING
0 3 2 0 NO-TRACE-STRING
0 4 3 0 NO-TRACE-STRING
0 1 4 0 NO-TRACE-STRING
0 2 5 0 NO-TRACE-STRING
0 3 6 0 NO-TRACE-STRING
0 4 0 0 NO-TRACE-STRING
0 1 1 0 NO-TRACE-STRING
0 2 2 0 NO-TRACE-STRING
0 3 3 0 NO-TRACE-STRING
0 4 4 0 NO-TRACE-STRING
0 1 5 0 NO-TRACE-STRING
0 2 6 0 NO-TRACE-STRING
0 3 0 0 NO-TRACE-STRING
0 4 1 0 NO-TRACE-STRING
0 1 21 15 0
.CMD FORMAT  rd=d ct=10 im=j et=3 zt=15 pr=3 mass length time charge temperature tr=0
.CMD SET ORIGIN 0
.CMD SET TOL 0.000000000100000
.CMD SET PRNCOLWIDTH 20
.CMD SET PRNPRECISION 16
.CMD PRINT_SETUP 1.200000 0
.CMD DEFINE_FONTSTYLE_NAME fontID=0 name=Variables
.CMD DEFINE_FONTSTYLE_NAME fontID=1 name=Constants
.CMD DEFINE_FONTSTYLE_NAME fontID=2 name=Text
.CMD DEFINE_FONTSTYLE_NAME fontID=4 name=User^1
.CMD DEFINE_FONTSTYLE_NAME fontID=5 name=User^2
.CMD DEFINE_FONTSTYLE_NAME fontID=6 name=User^3
.CMD DEFINE_FONTSTYLE_NAME fontID=7 name=User^4
.CMD DEFINE_FONTSTYLE_NAME fontID=8 name=User^5
.CMD DEFINE_FONTSTYLE_NAME fontID=9 name=User^6
.CMD DEFINE_FONTSTYLE_NAME fontID=10 name=User^7
.CMD DEFINE_FONTSTYLE fontID=0 family=Tms^Rmn points=10 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=1 family=Tms^Rmn points=10 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=2 family=Helv points=12 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=4 family=Helv points=10 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=5 family=Courier points=10 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=6 family=System points=10 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=7 family=Script points=10 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=8 family=Roman points=10 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=9 family=Modern points=10 bold=0 italic=0 underline=0
.CMD DEFINE_FONTSTYLE fontID=10 family=Tms^Rmn points=10 bold=0 italic=0 underline=0
.CMD UNITS U=1
.TXT 2 2 0 0
Cg a71.500000,72.000000,83
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {This Mathcad file creates a pulsed
 QPSK signal for use with the HP894x0A source.}}
}
.EQN 4 1 0 0
{0:\a}NAME:.5
.TXT 0 21 0 0
Cg a9.500000,50.000000,15
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Filter alpha}}
}
.EQN 4 -21 0 0
{0:widthInSymbols}NAME:22
.TXT 0 21 0 0
Cg a9.125000,50.000000,15
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Filter width}}
}
.TXT 0 30 0 0
Cg a17.375000,20.000000,40
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {\fs20 Aug 10, 1993\par signals\\qpsk.mcd}}
}
.EQN 4 -51 0 0
{0:ptsPerSymbol}NAME:12
.TXT 0 21 0 0
Cg a9.750000,50.000000,13
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Result PPS}}
}
.EQN 4 -21 0 0
{0:T}NAME:(1)/(200000)
.TXT 0 21 0 0
Cg a12.500000,50.000000,16
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Symbol period}}
}
.EQN 5 -21 0 0
{0:pulseWidth}NAME:100
.TXT 0 21 0 0
Cg a29.375000,50.000000,33
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {3dB pulse bandwidth in symbols}}
}
.EQN 4 -21 0 0
{0:transitionWidth}NAME:2
.TXT 0 21 0 0
Cg a33.375000,50.000000,43
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Pulse on/off transition width in
 symbols}}
}
.TXT 3 -21 0 0
Cg a68.125000,71.000000,112
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {-------------------------------------------------------------------------------------------------------------}}
}
.EQN 3 0 0 0
{0:numSyms}NAME:{0:pulseWidth}NAME+2*{0:widthInSymbols}NAME
.EQN 4 0 0 0
{0:numPts}NAME:{0:ptsPerSymbol}NAME*{0:widthInSymbols}NAME+1
.EQN 0 37 0 0
{0:lastFilterPt}NAME:{0:numPts}NAME-1
.EQN 4 -37 0 0
{0:i}NAME:0;{0:lastFilterPt}NAME
.TXT 4 0 0 0
Cg a45.375000,71.000000,59
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Create the time index vector for
 the root-Nyquist filter}}
}
.EQN 5 0 0 0
({0:t}NAME)[({0:i}NAME):({0:T}NAME)/({0:ptsPerSymbol}NAME)*{0:i}NAME-(1)/(2)*{0:T}NAME*{0:widthInSymbols}NAME
.TXT 8 0 0 0
Cg a70.000000,70.000000,71
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Compute the impulse response of
 the square-root raised cosine filter}}
}
.EQN 10 0 0 0
{0:h}NAME({0:t}NAME):2*((0&(1-{0:\a}NAME)/(2*{0:T}NAME)`{0:cos}NAME(2*{0:\p}NAME*{0:f}NAME*{0:t}NAME)&{0:f}NAME){54}((1-{0:\a}NAME)/(2*{0:T}NAME)&(1+{0:\a}NAME)/(2*{0:T}NAME)`(\((1)/(2)-(1)/(2)*{0:sin}NAME({0:\p}NAME*(2*{0:f}NAME*{0:T}NAME-1)/(2*
{0:\a}NAME))))*{0:cos}NAME(2*{0:\p}NAME*{0:f}NAME*{0:t}NAME)&{0:f}NAME))
.EQN 21 1 0 0
({0:h}NAME)[({0:i}NAME):{0:h}NAME(({0:t}NAME)[({0:i}NAME))*{0:T}NAME
.EQN 5 -1 0 0
&&({0:h}NAME)[({0:i}NAME)@&&(({0:t}NAME)[({0:i}NAME))/({0:T}NAME)
0 1 1 1 0
0 1 1 0 0
0 1 0 0 NO-TRACE-STRING
0 2 1 0 NO-TRACE-STRING
0 3 2 0 NO-TRACE-STRING
0 4 3 0 NO-TRACE-STRING
0 1 4 0 NO-TRACE-STRING
0 2 5 0 NO-TRACE-STRING
0 3 6 0 NO-TRACE-STRING
0 4 0 0 NO-TRACE-STRING
0 1 1 0 NO-TRACE-STRING
0 2 2 0 NO-TRACE-STRING
0 3 3 0 NO-TRACE-STRING
0 4 4 0 NO-TRACE-STRING
0 1 5 0 NO-TRACE-STRING
0 2 6 0 NO-TRACE-STRING
0 3 0 0 NO-TRACE-STRING
0 4 1 0 NO-TRACE-STRING
0 1 59 24 0
.TXT 39 0 0 0
Cg a21.375000,21.500000,32
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Generate the digital data   }}
}
.EQN 5 0 0 0
{0:n}NAME:0;({0:numSyms}NAME-1)+{0:widthInSymbols}NAME
.EQN 5 0 0 0
({0:x}NAME)[({0:n}NAME):({0:rnd}NAME(1)>.5)*2-1
.TXT 0 26 0 0
Cg a35.625000,46.000000,45
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Create two random data streams 
in \{-1,1\}}}
}
.EQN 5 -26 0 0
({0:y}NAME)[({0:n}NAME):({0:rnd}NAME(1)>.5)*2-1
.TXT 5 0 0 0
Cg a29.625000,71.000000,37
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Create data interleaved with zeros}}
}
.EQN 4 0 0 0
{0:l}NAME:0;(({0:numSyms}NAME+{0:transitionWidth}NAME)+{0:widthInSymbols}NAME)*{0:ptsPerSymbol}NAME-1
.EQN 4 0 0 0
({0:I}NAME)[({0:l}NAME):0
.EQN 0 9 0 0
({0:Q}NAME)[({0:l}NAME):0
.EQN 5 -9 0 0
({0:I}NAME)[({0:ptsPerSymbol}NAME*{0:n}NAME):({0:x}NAME)[({0:n}NAME)
.EQN 0 17 0 0
({0:Q}NAME)[({0:ptsPerSymbol}NAME*{0:n}NAME):({0:y}NAME)[({0:n}NAME)
.TXT 7 -17 0 0
Cg a42.750000,43.000000,55
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Perform the convolution with the
 root-Nyquist filter}}
}
.EQN 5 0 0 0
{0:sig.I}NAME({0:m}NAME):{0:i}NAME$({0:I}NAME)[(({0:m}NAME+{0:i}NAME))*({0:h}NAME)[({0:lastFilterPt}NAME-{0:i}NAME)
.EQN 0 29 0 0
{0:sig.Q}NAME({0:m}NAME):{0:i}NAME$({0:Q}NAME)[(({0:m}NAME+{0:i}NAME))*({0:h}NAME)[({0:lastFilterPt}NAME-{0:i}NAME)
.EQN 7 -29 0 0
{0:m}NAME:0;(({0:numSyms}NAME+{0:transitionWidth}NAME)*{0:ptsPerSymbol}NAME)-1
.EQN 6 0 0 0
({0:realPart}NAME)[({0:m}NAME):{0:sig.I}NAME({0:m}NAME)
.EQN 0 24 0 0
({0:imagPart}NAME)[({0:m}NAME):{0:sig.Q}NAME({0:m}NAME)
.EQN 6 -26 0 0
&&({0:imagPart}NAME)[({0:m}NAME)@&&({0:realPart}NAME)[({0:m}NAME)
0 0 1 0 0
0 0 1 0 0
0 1 0 0 NO-TRACE-STRING
0 2 1 0 NO-TRACE-STRING
0 3 2 0 NO-TRACE-STRING
0 4 3 0 NO-TRACE-STRING
0 1 4 0 NO-TRACE-STRING
0 2 5 0 NO-TRACE-STRING
0 3 6 0 NO-TRACE-STRING
0 4 0 0 NO-TRACE-STRING
0 1 1 0 NO-TRACE-STRING
0 2 2 0 NO-TRACE-STRING
0 3 3 0 NO-TRACE-STRING
0 4 4 0 NO-TRACE-STRING
0 1 5 0 NO-TRACE-STRING
0 2 6 0 NO-TRACE-STRING
0 3 0 0 NO-TRACE-STRING
0 4 1 0 NO-TRACE-STRING
0 1 58 47 0
.TXT 61 2 0 0
Cg a45.375000,71.000000,54
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Create a pulse amplitude weighting
 function (mask).}}
}
.EQN 5 0 0 0
{0:offPeriod}NAME:({0:numSyms}NAME-{0:pulseWidth}NAME)/(2)*{0:ptsPerSymbol}NAME
.EQN 5 0 0 0
({0:rectMask}NAME)[({0:m}NAME):({0:m}NAME>{0:offPeriod}NAME)*({0:m}NAME<{0:numSyms}NAME*{0:ptsPerSymbol}NAME-{0:offPeriod}NAME)
.EQN 5 0 0 0
{0:mtr}NAME:0;{0:transitionWidth}NAME*{0:ptsPerSymbol}NAME-1
.EQN 5 0 0 0
({0:\f}NAME)[({0:mtr}NAME):({0:mtr}NAME)/({0:transitionWidth}NAME*{0:ptsPerSymbol}NAME)*2*{0:\p}NAME
.EQN 7 0 0 0
({0:hanning}NAME)[({0:mtr}NAME):((1)/(2)+(1)/(2)*{0:cos}NAME(({0:\f}NAME)[({0:mtr}NAME)-{0:\p}NAME))*(2)/({0:transitionWidth}NAME*{0:ptsPerSymbol}NAME)
.EQN 7 0 0 0
{0:m}NAME:0;({0:numSyms}NAME-{0:transitionWidth}NAME)*{0:ptsPerSymbol}NAME-1
.EQN 5 0 0 0
({0:ampMask}NAME)[({0:m}NAME):{0:mtr}NAME$({0:rectMask}NAME)[({0:m}NAME+{0:mtr}NAME)*({0:hanning}NAME)[({0:mtr}NAME)
.EQN 7 0 0 0
&&({0:ampMask}NAME)[({0:m}NAME)@{0:numSyms}NAME&&({0:m}NAME)/({0:ptsPerSymbol}NAME)
0 0 1 1 0
0 0 1 0 0
0 1 0 0 NO-TRACE-STRING
0 2 1 0 NO-TRACE-STRING
0 3 2 0 NO-TRACE-STRING
0 4 3 0 NO-TRACE-STRING
0 1 4 0 NO-TRACE-STRING
0 2 5 0 NO-TRACE-STRING
0 3 6 0 NO-TRACE-STRING
0 4 0 0 NO-TRACE-STRING
0 1 1 0 NO-TRACE-STRING
0 2 2 0 NO-TRACE-STRING
0 3 3 0 NO-TRACE-STRING
0 4 4 0 NO-TRACE-STRING
0 1 5 0 NO-TRACE-STRING
0 2 6 0 NO-TRACE-STRING
0 3 0 0 NO-TRACE-STRING
0 4 1 0 NO-TRACE-STRING
0 1 53 15 0
.EQN 31 5 0 0
{0:x1}NAME:{0:widthInSymbols}NAME-{0:transitionWidth}NAME
.EQN 0 29 0 0
{0:x2}NAME:{0:widthInSymbols}NAME
.EQN 4 -29 0 0
{0:x3}NAME:{0:x1}NAME+{0:pulseWidth}NAME
.EQN 0 29 0 0
{0:x4}NAME:{0:x2}NAME+{0:pulseWidth}NAME
.EQN 2 -33 0 0
&&({0:ampMask}NAME)[({0:m}NAME)@{0:x2}NAME&{0:x1}NAME&({0:m}NAME)/({0:ptsPerSymbol}NAME)
0 0 1 1 0
0 0 1 0 0
0 1 0 0 NO-TRACE-STRING
0 2 1 0 NO-TRACE-STRING
0 3 2 0 NO-TRACE-STRING
0 4 3 0 NO-TRACE-STRING
0 1 4 0 NO-TRACE-STRING
0 2 5 0 NO-TRACE-STRING
0 3 6 0 NO-TRACE-STRING
0 4 0 0 NO-TRACE-STRING
0 1 1 0 NO-TRACE-STRING
0 2 2 0 NO-TRACE-STRING
0 3 3 0 NO-TRACE-STRING
0 4 4 0 NO-TRACE-STRING
0 1 5 0 NO-TRACE-STRING
0 2 6 0 NO-TRACE-STRING
0 3 0 0 NO-TRACE-STRING
0 4 1 0 NO-TRACE-STRING
0 1 19 15 0
.EQN 0 35 0 0
&&({0:ampMask}NAME)[({0:m}NAME)@{0:x4}NAME&{0:x3}NAME&({0:m}NAME)/({0:ptsPerSymbol}NAME)
0 0 1 1 0
0 0 1 0 0
0 1 0 0 NO-TRACE-STRING
0 2 1 0 NO-TRACE-STRING
0 3 2 0 NO-TRACE-STRING
0 4 3 0 NO-TRACE-STRING
0 1 4 0 NO-TRACE-STRING
0 2 5 0 NO-TRACE-STRING
0 3 6 0 NO-TRACE-STRING
0 4 0 0 NO-TRACE-STRING
0 1 1 0 NO-TRACE-STRING
0 2 2 0 NO-TRACE-STRING
0 3 3 0 NO-TRACE-STRING
0 4 4 0 NO-TRACE-STRING
0 1 5 0 NO-TRACE-STRING
0 2 6 0 NO-TRACE-STRING
0 3 0 0 NO-TRACE-STRING
0 4 1 0 NO-TRACE-STRING
0 1 18 15 0
.TXT 29 -37 0 0
Cg a29.125000,70.000000,36
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Apply the mask to the qpsk signal}}
}
.EQN 5 0 0 0
({0:qpskSignal}NAME)[({0:m}NAME,0):({0:realPart}NAME)[({0:m}NAME)*({0:ampMask}NAME)[({0:m}NAME)
.EQN 0 31 0 0
({0:qpskSignal}NAME)[({0:m}NAME,1):({0:imagPart}NAME)[({0:m}NAME)*({0:ampMask}NAME)[({0:m}NAME)
.EQN 15 -24 0 0
({0:mag}NAME)[({0:m}NAME):10*{0:log}NAME((((({0:qpskSignal}NAME)[({0:m}NAME,0)))^(2)+((({0:qpskSignal}NAME)[({0:m}NAME,1)))^(2))-(10)^(-8))
.EQN 3 -8 0 0
&&({0:mag}NAME)[({0:m}NAME)@{0:numSyms}NAME&&({0:m}NAME)/({0:ptsPerSymbol}NAME)
0 1 1 1 0
0 1 1 0 0
0 1 0 0 NO-TRACE-STRING
0 2 1 0 NO-TRACE-STRING
0 3 2 0 NO-TRACE-STRING
0 4 3 0 NO-TRACE-STRING
0 1 4 0 NO-TRACE-STRING
0 2 5 0 NO-TRACE-STRING
0 3 6 0 NO-TRACE-STRING
0 4 0 0 NO-TRACE-STRING
0 1 1 0 NO-TRACE-STRING
0 2 2 0 NO-TRACE-STRING
0 3 3 0 NO-TRACE-STRING
0 4 4 0 NO-TRACE-STRING
0 1 5 0 NO-TRACE-STRING
0 2 6 0 NO-TRACE-STRING
0 3 0 0 NO-TRACE-STRING
0 4 1 0 NO-TRACE-STRING
0 1 61 32 0
.TXT 47 1 0 0
Cg a71.875000,72.000000,92
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Write the complex result to a file.
  Set variables PRNPRECISION = 16 and PRNCOLWIDTH
 =20}}
}
.EQN 5 0 0 0
{0:WRITEPRN}NAME({0:outFile}NAME):{0:qpskSignal}NAME
.TXT 6 1 0 0
Cg a71.000000,71.000000,361
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {Before the output file can be played
 out the source, the file must be converted
 from ASCII format to SDF format.  This 
is done outside of Mathcad using the SDF
 utility program 'asctosdf'.  The program
 will require two command-line options to
 set the appropriate source sample frequency
 and center frequency.  The values that 
will be used are shown below.}}
}
.EQN 13 -1 0 0
{0:samplePeriod}NAME:({0:T}NAME)/({0:ptsPerSymbol}NAME)
.EQN 6 0 0 0
{0:samplePeriod}NAME={18998}?_n_u_l_l_
.EQN 0 26 0 0
{0:centerFreq}NAME:900*(10)^(6)
.TXT 9 -27 0 0
Cg a69.000000,69.000000,365
{\rtf1\ansi \deff0
{\fonttbl
{\f0\fnil Helv;}
{\f1\fnil Arial;}
}
{\plain {The syntax for the SDF utility 
program is shown below.  Substitute numbers
 for  samplePeriod and centerFreq.\par \par 
              c:>asctosdf outfile.prn /X:0,samplePeriod
 /Z:centerFreq result.dat\par \par For example
 to convert the ASCII file outfile.prn to
 the SDF file qpsk.dat use:    \par \par 
              c:>asctosdf  outfile.prn  
/X:0,4.115226e-6   /Z:900e+6  qpsk.dat}}
}
